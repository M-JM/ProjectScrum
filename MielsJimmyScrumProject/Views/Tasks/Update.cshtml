@model TaskEditViewModel

@{
    ViewData["Title"] = "Update Board ";
    @inject UserManager<ApplicationUser> userManager;
    var currentUser = await userManager.GetUserAsync(Context.User);
}



<div class="row my-auto d-flex justify-content-center text-center">
    <h1>Update task @Model.Title</h1>
</div>
<hr />
<div class="row my-auto d-flex justify-content-center ">
    <div class="col-md-6 mx-auto">

        <form asp-action="Update" asp-controller="Tasks" method="post" >
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="BoardId" />

            <div class="row">
               <div class="col-sm-10">
                   <p>currently assigned to @Model.AssginedUser</p>
                </div>
            </div>

            <div class="form-group row">
                <label asp-for="Title" class="col-sm-6 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="Title" class="form-control" placeholder="Name" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row">
                <label asp-for="Description" class="col-sm-6 col-form-label"></label>
                <div class="col-sm-10">
                    <textarea asp-for="Description" class="form-control" rows="3" cols="20" placeholder="Description"> </textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row">
                <label asp-for="Status" class="col-sm-6 col-form-label"></label>
                <div class="col-sm-10">
                    <select asp-for="Status" asp-items="Html.GetEnumSelectList<ScrumTaskStatus>()" class="custom-select mr-sm-2">
                        <option value="">Select Status of Task</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>


            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group row ">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-success">Update</button>
                    <a asp-action="TaskList" asp-controller="Tasks" asp-route-boardid="@Model.BoardId" class="btn btn-secondary">Back</a>
                </div>
            </div>

            @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
            {
                <div class="card  col-sm-10">
                    <div class="card-header">
                        <h2>Assign User to Task</h2>
                    </div>
                    <div class="card-body">

                        @if (Model.AvailableUsers.Count != 0)
                        {
                            @foreach (var user in Model.AvailableUsers)
                            {

                                <input type="radio" asp-for="Userid" value="@user.ApplicationUserId" name="Userid">
                                <label>@user.ApplicationUser.UserName </label>
                                <br />
                            }
                        }
                        else
                        {
                            <p>No users are currently assigned to the board add users to board first</p>
                        }

                    </div>
                </div>
            }
            else
            {
                <input type="hidden" asp-for="Userid" value="@currentUser.Id">
            }


        </form>
    </div>
</div>

@section Scripts {

}
