@model UserTaskListViewModel
@inject UserManager<ApplicationUser> userManager;

@{
    ViewData["Title"] = "Index";
    var user = await userManager.GetUserAsync(Context.User);


}
@if (Model.Boards != null)
{

    @foreach (var Board in Model.Boards)
    {


        <div class="container-fluid m-4">
            <h1 class="mb-2 text-center accordion">Board Name : @Board.Name</h1>



            <div class="row accordion-panel clearfix">

                <div class="card-group col-4">
                    <div class="card bg-default">
                        <div class="card-header text-center">
                            <strong>To Do</strong>
                        </div>
                        <div class="card-body text-center">

                            @foreach (var task in Board.BoardTasks.Where(x => x.Status == ScrumTaskStatus.ToDo && x.ApplicationUser == user && x.IsDeleted == false))
                            {

                                <div class="card mb-2 text-white bg-dark text-center">
                                    <div class="card-header">
                                        <strong>
                                            @task.Title
                                        </strong>
                                    </div>
                                    <div class="card-body text-center">
                                        <p class="card-text">
                                            @task.Description
                                        </p>
                                        <footer class="blockquote-footer text-white">
                                            assigned to user :  @task.ApplicationUser.UserName
                                        </footer>
                                        <div class="card-body text-center">
                                            <p class="card-text ">
                                                <a asp-action="Details" asp-controller="tasks" asp-route-taskid="@task.Id" class="btn btn-primary btn-sm ">View details of task</a>
                                            </p>
                                        </div>
                                    </div>
                                </div>

                            }
                        </div>

                    </div>
                </div>
                <div class="card-group col-4">
                    <div class="card bg-default">
                        <div class="card-header text-center">
                            <strong>Doing</strong>
                        </div>

                        <div class="card-body text-center">
                            @foreach (var task in Board.BoardTasks.Where(x => x.Status == ScrumTaskStatus.Doing && x.ApplicationUser == user && x.IsDeleted == false))
                            {
                                <div class="card mb-2 text-white bg-dark text-center">
                                    <div class="card-header">
                                        <strong>
                                            @task.Title
                                        </strong>
                                    </div>
                                    <div class="card-body text-center">
                                        <p class="card-text">
                                            @task.Description
                                        </p>
                                        <footer class="blockquote-footer text-white">
                                            assigned to user :  @task.ApplicationUser.UserName
                                        </footer>
                                        <div class="card-body text-center">
                                            <p class="card-text ">
                                                <a asp-action="Details" asp-controller="tasks" asp-route-taskid="@task.Id" class="btn btn-primary btn-sm ">View details of task</a>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>



                    </div>
                </div>
                <div class="card-group col-4">
                    <div class="card bg-default">
                        <div class="card-header text-center">
                            <strong>Done</strong>
                        </div>

                        <div class="card-body text-center">
                            @foreach (var task in Board.BoardTasks.Where(x => x.Status == ScrumTaskStatus.Done && x.ApplicationUser == user && x.IsDeleted == false))
                            {
                                <div class="card mb-2 text-white bg-dark text-center">
                                    <div class="card-header">
                                        <strong>
                                            @task.Title
                                        </strong>
                                    </div>
                                    <div class="card-body text-center">
                                        <p class="card-text">
                                            @task.Description
                                        </p>
                                        <footer class="blockquote-footer text-white">
                                            assigned to user :  @task.ApplicationUser.UserName
                                        </footer>
                                        <div class="card-body text-center">
                                            <p class="card-text ">
                                                <a asp-action="Details" asp-controller="tasks" asp-route-taskid="@task.Id" class="btn btn-primary btn-sm ">View details of task</a>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>



                    </div>
                </div>


            </div>
        </div>

    }



}
else if (Model.Boards == null)
{

    <p> No Boards assigned to you </p>

}
@section Scripts {
    <script>


        let accordions = document.getElementsByClassName("accordion");

        for (let i = 0; i < accordions.length; i++) {
            // Add for every button a event listerner
            accordions[i].addEventListener("click", function () {
                // Toggle between adding and removing the active class
                this.classList.toggle("accordion-active");

                // Toggle showing and hiding the panel
                let panel = this.nextElementSibling;
                $(panel).toggle(250);
            });
        }
    </script>
}
@section Styles {
    <link href="~/css/Toggler.css" rel="stylesheet" asp-append-version="true" />
}

@*Accordion from https://codepen.io/wim-vanderschueren/pen/LaGrQR*@