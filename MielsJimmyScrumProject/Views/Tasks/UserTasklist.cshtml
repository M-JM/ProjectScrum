@model UserTaskListViewModel
@inject UserManager<ApplicationUser> userManager;

@{
    ViewData["Title"] = "Index";
    var user = await userManager.GetUserAsync(Context.User);
     int i = 0;
   
}
@if (Model.Boards != null)
{

    @foreach (var Board in Model.Boards)
    {
       

        <div class="container-fluid m-4">
            <h1 class="mb-2 text-center test collapsible_@i">Board Name : @Board.Name</h1>       
        </div>
     

        <div class="row content_@i">

            <div class="card-group col-4">
                <div class="card bg-default">
                    <div class="card-header text-center">
                        <strong>To Do</strong>
                    </div>
                    <div class="card-body text-center">

                        @foreach (var task in Board.BoardTasks.Where(x => x.Status == ScrumTaskStatus.ToDo && x.ApplicationUser == user && x.IsDeleted == false))
                        {

                            <div class="card mb-2 text-white bg-dark text-center">
                                <div class="card-header">
                                    <strong>
                                        @task.Title
                                    </strong>
                                </div>
                                <div class="card-body text-center">
                                    <p class="card-text">
                                        @task.Description
                                    </p>
                                    <footer class="blockquote-footer text-white">
                                        assigned to user :  @task.ApplicationUser.UserName
                                    </footer>
                                    <div class="card-body text-center">
                                        <p class="card-text ">
                                            <a asp-action="Details" asp-controller="tasks" asp-route-taskid="@task.Id" class="btn btn-primary btn-sm ">View details of task</a>
                                        </p>
                                    </div>
                                </div>
                            </div>

                        }
                    </div>

                    </div>
            </div>
            <div class="card-group col-4">
                <div class="card bg-default">
                    <div class="card-header text-center">
                        <strong>Doing</strong>
                    </div>

                    <div class="card-body text-center">
                        @foreach (var task in Board.BoardTasks.Where(x => x.Status == ScrumTaskStatus.Doing && x.ApplicationUser == user && x.IsDeleted == false))
                        {
                            <div class="card mb-2 text-white bg-dark text-center">
                                <div class="card-header">
                                    <strong>
                                        @task.Title
                                    </strong>
                                </div>
                                <div class="card-body text-center">
                                    <p class="card-text">
                                        @task.Description
                                    </p>
                                    <footer class="blockquote-footer text-white">
                                        assigned to user :  @task.ApplicationUser.UserName
                                    </footer>
                                    <div class="card-body text-center">
                                        <p class="card-text ">
                                            <a asp-action="Details" asp-controller="tasks" asp-route-taskid="@task.Id" class="btn btn-primary btn-sm ">View details of task</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>



                </div>
            </div>
            <div class="card-group col-4">
                <div class="card bg-default">
                    <div class="card-header text-center">
                        <strong>Done</strong>
                    </div>

                    <div class="card-body text-center">
                        @foreach (var task in Board.BoardTasks.Where(x => x.Status == ScrumTaskStatus.Done && x.ApplicationUser == user && x.IsDeleted == false))
                        {
                            <div class="card mb-2 text-white bg-dark text-center">
                                <div class="card-header">
                                    <strong>
                                        @task.Title
                                    </strong>
                                </div>
                                <div class="card-body text-center">
                                    <p class="card-text">
                                        @task.Description
                                    </p>
                                    <footer class="blockquote-footer text-white">
                                        assigned to user :  @task.ApplicationUser.UserName
                                    </footer>
                                    <div class="card-body text-center">
                                        <p class="card-text ">
                                            <a asp-action="Details" asp-controller="tasks" asp-route-taskid="@task.Id" class="btn btn-primary btn-sm ">View details of task</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>



                </div>
            </div>


        </div>
        i++;
    }



}
else if (Model.Boards == null)
{

    <p> No Boards assigned to you </p>

}
@section Scripts {
    <script>
        var i;
        var numItems = $('.test');
        console.log(numItems)
        for (i = 0; i < numItems.length ; i++) {
        $(document).ready(function () {
            $('.collapsible_'+i).click(function () {
                $('.content_'+i).toggle();
            });
        });
            console.log(i)
        };
    </script>
}
@*@section Styles {
        <link href="~/css/Toggler.css" rel="stylesheet" asp-append-version="true" />
    }*@