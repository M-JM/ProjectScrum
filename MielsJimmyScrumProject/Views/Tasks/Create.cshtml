@model TaskCreateViewModel
@inject UserManager<ApplicationUser> userManager;
@{
    ViewData["Title"] = "Create";
    var currentUser = await userManager.GetUserAsync(Context.User);
}
    <div class="row my-auto d-flex justify-content-center text-center">
       <h1>Create a new Task in @Model.Board.Name</h1>
    </div>
<hr />
<div class="row my-auto d-flex justify-content-center ">
    <div class="col-md-8 my-auto d-flex justify-content-center">

        <form asp-action="Create" asp-controller="Tasks" method="post" class="mt-3">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="BoardId" />
            <input type="hidden" asp-for="CompanyId" />

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3" cols="20"> </textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="Status" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <select asp-for="Status" asp-items="Html.GetEnumSelectList<ScrumTaskStatus>()" class="custom-select mr-sm-2">
                        <option value="">Select Status of Task</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>

            @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
            {
                <div class="card ">
                    <div class="card-header">
                        <h2>Assign User to Task</h2>
                    </div>
                    <div class="card-body">

                        @if (Model.AvailableUsers.Count != 0)
                        {
                            @foreach (var user in Model.AvailableUsers)
                            {

                                <input type="radio" asp-for="Userid" value="@user.ApplicationUserId" name="Userid">
                                <label>@user.ApplicationUser.UserName </label>
                                <br />
                            }
                        }
                        else
                        {
                            <p>No users are currently assigned to the board add users to board first</p>
                        }

                    </div>
                </div>
            }
            else
            {
                <input type="hidden" asp-for="Userid" value="@currentUser.Id">
            }
                      
        <div class="btn-toolbar" role="toolbar">
            @if (User.IsInRole("Admin"))
            {
                <input type="submit" value="Create" class="btn btn-success mr-1 " />
                <a class="btn btn-dark mr-1" asp-action="details" asp-controller="Boards" asp-route-id="@Model.BoardId">Back to board details</a>
            }
            @if (User.IsInRole("User"))
            {
                <input type="submit" value="Create" class="btn btn-success mr-1 " />
                <a asp-action="tasklist" asp-controller="tasks" asp-route-boardid="@Model.BoardId" class="btn btn-primary mr-1">Back to overview</a>
            }
            @if (User.IsInRole("SuperAdmin"))
            {
                <input type="submit" value="Create" class="btn btn-success mr-1 " />
                <a asp-action="tasklist" asp-controller="tasks" asp-route-boardid="@Model.BoardId" class="btn btn-primary mr-1">Back to overview</a>
            }


        </div>
        </form>
    </div>
</div>

<div>
   
</div>

