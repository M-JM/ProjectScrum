// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MielsJimmyScrumProjectDAL.Context;

namespace MielsJimmyScrumProjectDAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200419124505_NormalizedRolesSeedData")]
    partial class NormalizedRolesSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "9d17f4e4-1a9e-439b-a88d-6e994a990fe7",
                            ConcurrencyStamp = "f7e73a10-2237-4c11-a1e5-33e2d58a30ec",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "b4e5c024-99c5-43b1-847f-26585777f463",
                            ConcurrencyStamp = "9b2fd355-e828-42c0-9683-b8f1ea6ec2ef",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5",
                            ConcurrencyStamp = "5b9df086-17fd-4c12-a6e8-587e323137f0",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "da262156-18ee-4fef-b465-f2ec8d19b569",
                            RoleId = "9d17f4e4-1a9e-439b-a88d-6e994a990fe7"
                        },
                        new
                        {
                            UserId = "44102b7c-5da3-4d08-8466-c32914e3b5b8",
                            RoleId = "b4e5c024-99c5-43b1-847f-26585777f463"
                        },
                        new
                        {
                            UserId = "4fbb337df-8c68-4b09-b5ba-6f7f5046b44d",
                            RoleId = "b4e5c024-99c5-43b1-847f-26585777f463"
                        },
                        new
                        {
                            UserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "e615c429-b915-4312-871d-74287869debb",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "ff611b21-e8cf-40c9-931e-2c379163017a",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "da262156-18ee-4fef-b465-f2ec8d19b569",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "26d61f5e-3ae5-482d-85ee-1ce4f6a31807",
                            CreatedBy = "SuperAdmin@scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "SuperAdmin@scrum.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@SCRUM.COM",
                            NormalizedUserName = "SUPERADMIN@SCRUM.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGAymq2s6Z8QQAENcHyGGBqJqjPOu7k1WVK/ZeM83Cnr96o4mOFZy9iatQgaeOREHQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ec27899-4edc-44d4-aac1-71e19e044a70",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "SuperAdmin@scrum.com"
                        },
                        new
                        {
                            Id = "44102b7c-5da3-4d08-8466-c32914e3b5b8",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "30077837-96d1-4ad3-a182-867221dd3ce1",
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "Admin@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ASUS.COM",
                            NormalizedUserName = "ADMIN@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEG+AyrHndwm+bI7Prz0DJKCZkpuodrWOj+IJlLZqNzCol6G2rvKqfsldCwUUY+zhJA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "06ed472d-9b06-45b5-b941-c6247ac1b8dc",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "Admin@Asus.com"
                        },
                        new
                        {
                            Id = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "d7def929-934e-4d21-a36c-69975d9762f9",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User1@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@ASUS.COM",
                            NormalizedUserName = "USER1@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECIOIfz4k5p1b1TJn4CdjcatGB157K83zYNYSSLwjadsQkotVqaRde8CcURdAu22CQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2362e048-ea84-4657-a5ad-178757a0516e",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User1@Asus.com"
                        },
                        new
                        {
                            Id = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "766ac3a1-d3c1-48b4-a94d-0cad92cb6e0a",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User2@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@ASUS.COM",
                            NormalizedUserName = "USER2@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ84iNO2sTOLunCrRbyBQLJArAOd/OxS1QAFzKQ7fpEINWOll/74GNsUfFylVePYlw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a4eba6a7-9657-4e6d-9faf-09035ab947b7",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User2@Asus.com"
                        },
                        new
                        {
                            Id = "e615c429-b915-4312-871d-74287869debb",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "6d43fb80-d47b-40bd-80d1-7ea1adf4fe4b",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User3@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@ASUS.COM",
                            NormalizedUserName = "USER3@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEG4S+3spvIldNewKfDe/LopbT+eaRcMDkbkeMtoFIXgcCicQ1jZi0uDnW4YYPfgQw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7e027ac9-4d02-4579-86c4-a19a57f11369",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User3@Asus.com"
                        },
                        new
                        {
                            Id = "4fbb337df-8c68-4b09-b5ba-6f7f5046b44d",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "483710d2-1696-4131-a6d9-d79afa30bc8d",
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "Admin@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@HP.COM",
                            NormalizedUserName = "ADMIN@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK7ytiunYJxaWDfqJk1EA8b4/jo/O+CnPEFX6WZFhmytq+2Wu2w6BEgwZDfzupn9lg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8f4c7b32-c261-47f3-8df6-a0e9d1409539",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "Admin@HP.com"
                        },
                        new
                        {
                            Id = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "3108cbb5-2a95-4190-9494-3f1a86e9cad4",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User1@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@HP.COM",
                            NormalizedUserName = "USER1@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEM7JEXVOWTAEu5dLbeELFxDyVmtSILgEi4qU9KKxdJ9Poyt6H9bsrZdK5JzADfcegA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0ba828b4-351f-4266-ae81-892499cc5de7",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User1@HP.com"
                        },
                        new
                        {
                            Id = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "9bcd2c97-47c9-44b0-a699-a39b69901527",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User2@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@HP.COM",
                            NormalizedUserName = "USER2@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKIja5FqbW13r/y52NcW0EtljGd+FhNPmIoZ7zaOKWoZa5Dbp6oP2tqCJGHbxTa1IA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e95c589-c603-4899-8b21-c80565a85e0b",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User2@HP.com"
                        },
                        new
                        {
                            Id = "ff611b21-e8cf-40c9-931e-2c379163017a",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "b2b34c13-9c90-45c0-9acd-1b8ca470fcea",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User3@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@HP.COM",
                            NormalizedUserName = "USER3@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIFeC5GNv0o8baQDC+49oBMhvFt8TzXfTIela5OqEZ+k2xEQLyZwLoRRVrNJ0CxX7Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7b5554ac-1f35-4088-8ed8-1b6785022837",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User3@HP.com"
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Laptop model X",
                            IsDeleted = false,
                            Name = "Asus Laptop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Desktop model X",
                            IsDeleted = false,
                            Name = "Asus Desktop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Screen model X",
                            IsDeleted = false,
                            Name = "Asus Screen Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Laptop model X",
                            IsDeleted = false,
                            Name = "HP Laptop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 2,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Desktop model X",
                            IsDeleted = false,
                            Name = "HP Desktop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 2,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Screen model X",
                            IsDeleted = false,
                            Name = "HP Screen Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("Userid");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoardId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 2,
                            BoardId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 3,
                            BoardId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new laptop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 4,
                            BoardId = 2,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 5,
                            BoardId = 2,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 6,
                            BoardId = 2,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 7,
                            BoardId = 2,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 8,
                            BoardId = 2,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 9,
                            BoardId = 2,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new desktop",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 10,
                            BoardId = 3,
                            CreatedBy = "User3@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "e615c429-b915-4312-871d-74287869debb"
                        },
                        new
                        {
                            Id = 11,
                            BoardId = 3,
                            CreatedBy = "User3@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "e615c429-b915-4312-871d-74287869debb"
                        },
                        new
                        {
                            Id = 12,
                            BoardId = 3,
                            CreatedBy = "User3@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "e615c429-b915-4312-871d-74287869debb"
                        },
                        new
                        {
                            Id = 13,
                            BoardId = 3,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 14,
                            BoardId = 3,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 15,
                            BoardId = 3,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new Screen",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 16,
                            BoardId = 3,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact and setup meeting with assembly factoru",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Contact Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 17,
                            BoardId = 3,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Negotiate the price and sign the necessary agreements",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Negotiate price point for manufactoring",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 18,
                            BoardId = 3,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Find an assembly factory who can produce the screens",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Find Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 19,
                            BoardId = 4,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 20,
                            BoardId = 4,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 21,
                            BoardId = 4,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new laptop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 22,
                            BoardId = 5,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 23,
                            BoardId = 5,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 24,
                            BoardId = 5,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 25,
                            BoardId = 5,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 26,
                            BoardId = 5,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 27,
                            BoardId = 5,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new desktop",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 28,
                            BoardId = 6,
                            CreatedBy = "User3@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ff611b21-e8cf-40c9-931e-2c379163017a"
                        },
                        new
                        {
                            Id = 29,
                            BoardId = 6,
                            CreatedBy = "User3@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ff611b21-e8cf-40c9-931e-2c379163017a"
                        },
                        new
                        {
                            Id = 30,
                            BoardId = 6,
                            CreatedBy = "User3@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ff611b21-e8cf-40c9-931e-2c379163017a"
                        },
                        new
                        {
                            Id = 31,
                            BoardId = 6,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 32,
                            BoardId = 6,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 33,
                            BoardId = 6,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new Screen",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 34,
                            BoardId = 6,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact and setup meeting with assembly factory",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Contact Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 35,
                            BoardId = 6,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Negotiate the price and sign the necessary agreements",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Negotiate price point for manufactoring",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 36,
                            BoardId = 6,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Find an assembly factory who can produce the screens",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Find Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardUser", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BoardId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("BoardUsers");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            ApplicationUserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 2,
                            ApplicationUserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 3,
                            ApplicationUserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 2,
                            ApplicationUserId = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 3,
                            ApplicationUserId = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 3,
                            ApplicationUserId = "e615c429-b915-4312-871d-74287869debb",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 4,
                            ApplicationUserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 5,
                            ApplicationUserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 6,
                            ApplicationUserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 5,
                            ApplicationUserId = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 6,
                            ApplicationUserId = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 6,
                            ApplicationUserId = "ff611b21-e8cf-40c9-931e-2c379163017a",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Asus LTD",
                            PhotoPath = "Asus-logo.jpg",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HP LTD",
                            PhotoPath = "hp-logo.jpg",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.ApplicationUser", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.Board", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardTask", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Board", "Board")
                        .WithMany("BoardTasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardUser", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("BoardUser")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Board", "Board")
                        .WithMany("BoardUsers")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
