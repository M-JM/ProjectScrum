// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MielsJimmyScrumProjectDAL.Context;

namespace MielsJimmyScrumProjectDAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200417195328_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "9d17f4e4-1a9e-439b-a88d-6e994a990fe7",
                            ConcurrencyStamp = "e70adf0c-2631-48c5-b65c-ba0d87782b2e",
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = "b4e5c024-99c5-43b1-847f-26585777f463",
                            ConcurrencyStamp = "f6be40e4-8f98-4620-9133-d4d229e78497",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5",
                            ConcurrencyStamp = "455bd7e7-9807-4772-a60b-00f0a88c252c",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "da262156-18ee-4fef-b465-f2ec8d19b569",
                            RoleId = "9d17f4e4-1a9e-439b-a88d-6e994a990fe7"
                        },
                        new
                        {
                            UserId = "44102b7c-5da3-4d08-8466-c32914e3b5b8",
                            RoleId = "b4e5c024-99c5-43b1-847f-26585777f463"
                        },
                        new
                        {
                            UserId = "4fbb337df-8c68-4b09-b5ba-6f7f5046b44d",
                            RoleId = "b4e5c024-99c5-43b1-847f-26585777f463"
                        },
                        new
                        {
                            UserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "e615c429-b915-4312-871d-74287869debb",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        },
                        new
                        {
                            UserId = "ff611b21-e8cf-40c9-931e-2c379163017a",
                            RoleId = "fb4302cf-f521-4fa9-b20a-0d4e59b703a5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "da262156-18ee-4fef-b465-f2ec8d19b569",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b4b68607-0a28-43e5-ac6f-67c8611761d8",
                            CreatedBy = "SuperAdmin@scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "SuperAdmin@scrum.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@SCRUM.COM",
                            NormalizedUserName = "SUPERADMIN@SCRUM.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENT1GxjPRmc70nk7fFGVmVuHsEeEnjhnrHrCVUVw5E9RWHDJwsJ54amuPZ/Mbc/RIA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9791d93c-3c5f-47a5-878f-dee9a579bc9a",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "SuperAdmin@scrum.com"
                        },
                        new
                        {
                            Id = "44102b7c-5da3-4d08-8466-c32914e3b5b8",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "91f6b202-66a9-4186-ad5a-cc682d78594b",
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "Admin@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ASUS.COM",
                            NormalizedUserName = "ADMIN@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJP7tdXn5enneOXa4Mt6GlAhC6gIqwbHd4wd1N4bi0UMM8zmegJ0QV6VQHweI6LJ0w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c7817e45-ae28-4ec2-9db2-3ae3380d2aac",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "Admin@Asus.com"
                        },
                        new
                        {
                            Id = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "ee36f0eb-de73-4ba4-8c69-0a8b29fa5515",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User1@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@ASUS.COM",
                            NormalizedUserName = "USER1@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJaS3syaPs38YLKXDAaC5mhiDuzBTIBVIu48TKQCAxUUB8qAyskGna3ilRyHrZLhKg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "25f8f121-e978-4848-bb73-9b00985719f1",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User1@Asus.com"
                        },
                        new
                        {
                            Id = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "52efd208-eb4a-4539-a520-c64fdab1c7cd",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User2@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@ASUS.COM",
                            NormalizedUserName = "USER2@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGRsRe/Y/Sf+OWC7wS1sgvvARapQHgmjTnBT2as5xf08nDevSnDQzLam4Zili8y8jQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8b2b5d14-5806-4963-a3d9-71f9845e44ce",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User2@Asus.com"
                        },
                        new
                        {
                            Id = "e615c429-b915-4312-871d-74287869debb",
                            AccessFailedCount = 0,
                            CompanyId = 1,
                            ConcurrencyStamp = "37e827cc-c28f-410c-ba5f-261555e649b3",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User3@Asus.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@ASUS.COM",
                            NormalizedUserName = "USER3@ASUS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFJd4cwvIZQKjsg9WyHuIixiYG6hUYDbFVsqJHj7+wFVo/zSSI5tPZHq9VGrpKanTw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7486b414-71a2-4678-b64a-8d5188b76ecc",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User3@Asus.com"
                        },
                        new
                        {
                            Id = "4fbb337df-8c68-4b09-b5ba-6f7f5046b44d",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "95d56634-8170-4ecb-915b-cbdc6ce969a0",
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "Admin@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@HP.COM",
                            NormalizedUserName = "ADMIN@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPf++9pUjkFQtQUj3gT3dwIs3hHiN3eLH68Rguw9RT16VZTA2OqG9/HhuV1c92KZ0g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4c592b83-89d6-4dad-b8f3-a9203c197271",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "Admin@HP.com"
                        },
                        new
                        {
                            Id = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "4106f2dd-aec9-44f7-9925-1fdee559093b",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User1@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@HP.COM",
                            NormalizedUserName = "USER1@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEwfQB/x5CR8KybVnr6nDc+DlNN5vsOqPIPKsc6oH4v24v0dXnla91pubcsdeUlrkA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c44f9381-f4d8-4529-9986-881c0b7df2a8",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User1@HP.com"
                        },
                        new
                        {
                            Id = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "0656ffb6-633c-4e16-a4c6-ee3770ebb080",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User2@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@HP.COM",
                            NormalizedUserName = "USER2@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBiLpIGK/61pQcXefPEfhIv4xp31TrskYKnVtmFGGoWo9UbCa0uhPvOSXFfzY5tJxg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2f054365-eb8f-4ae3-9182-dbb08a04eb54",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User2@HP.com"
                        },
                        new
                        {
                            Id = "ff611b21-e8cf-40c9-931e-2c379163017a",
                            AccessFailedCount = 0,
                            CompanyId = 2,
                            ConcurrencyStamp = "1be2603c-e263-4dda-a5f1-a293d5dea211",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Email = "User3@HP.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@HP.COM",
                            NormalizedUserName = "USER3@HP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGIc+fqRN56wuuuIfVd29ZIm7JEjPoHm9aJR49gXzN4nupnPxeaBxC1OyVNCrD1djA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1564e53f-d38c-4569-9d41-4a949c01b765",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            UserName = "User3@HP.com"
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Laptop model X",
                            IsDeleted = false,
                            Name = "Asus Laptop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Desktop model X",
                            IsDeleted = false,
                            Name = "Asus Desktop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Screen model X",
                            IsDeleted = false,
                            Name = "Asus Screen Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Laptop model X",
                            IsDeleted = false,
                            Name = "HP Laptop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 2,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Desktop model X",
                            IsDeleted = false,
                            Name = "HP Desktop Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 2,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = " New Design of Screen model X",
                            IsDeleted = false,
                            Name = "HP Screen Design",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("Userid");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoardId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 2,
                            BoardId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 3,
                            BoardId = 1,
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new laptop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 4,
                            BoardId = 2,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 5,
                            BoardId = 2,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 6,
                            BoardId = 2,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 7,
                            BoardId = 2,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 8,
                            BoardId = 2,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 9,
                            BoardId = 2,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new desktop",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 10,
                            BoardId = 3,
                            CreatedBy = "User3@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "e615c429-b915-4312-871d-74287869debb"
                        },
                        new
                        {
                            Id = 11,
                            BoardId = 3,
                            CreatedBy = "User3@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "e615c429-b915-4312-871d-74287869debb"
                        },
                        new
                        {
                            Id = 12,
                            BoardId = 3,
                            CreatedBy = "User3@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "e615c429-b915-4312-871d-74287869debb"
                        },
                        new
                        {
                            Id = 13,
                            BoardId = 3,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 14,
                            BoardId = 3,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 15,
                            BoardId = 3,
                            CreatedBy = "User1@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new Screen",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "df50bb3c-693a-4889-8bc6-c7059a20b529"
                        },
                        new
                        {
                            Id = 16,
                            BoardId = 3,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact and setup meeting with assembly factoru",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Contact Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 17,
                            BoardId = 3,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Negotiate the price and sign the necessary agreements",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Negotiate price point for manufactoring",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 18,
                            BoardId = 3,
                            CreatedBy = "User2@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Find an assembly factory who can produce the screens",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Find Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ccd0fb63-3173-4ab2-a80b-731d9939ee70"
                        },
                        new
                        {
                            Id = 19,
                            BoardId = 4,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 20,
                            BoardId = 4,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 21,
                            BoardId = 4,
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new laptop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 22,
                            BoardId = 5,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 23,
                            BoardId = 5,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 24,
                            BoardId = 5,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 25,
                            BoardId = 5,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 26,
                            BoardId = 5,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 27,
                            BoardId = 5,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new desktop",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 28,
                            BoardId = 6,
                            CreatedBy = "User3@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Draft a list of specification",
                            IsDeleted = false,
                            Status = 1,
                            Title = "SPEC LIST",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ff611b21-e8cf-40c9-931e-2c379163017a"
                        },
                        new
                        {
                            Id = 29,
                            BoardId = 6,
                            CreatedBy = "User3@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Send the specification list to the engineers",
                            IsDeleted = false,
                            Status = 0,
                            Title = "SEND SPEC LIST FOR REVIEW",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ff611b21-e8cf-40c9-931e-2c379163017a"
                        },
                        new
                        {
                            Id = 30,
                            BoardId = 6,
                            CreatedBy = "User3@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Come up with a cool commercial name",
                            IsDeleted = false,
                            Status = 2,
                            Title = "new Desktop name",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "ff611b21-e8cf-40c9-931e-2c379163017a"
                        },
                        new
                        {
                            Id = 31,
                            BoardId = 6,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Start online marketing campaign",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Marketing Campaign",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 32,
                            BoardId = 6,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact all our known wholesale distributors and open delivery channels ",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Contact distribution list",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 33,
                            BoardId = 6,
                            CreatedBy = "User1@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Set price point of new Screen",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Price determination",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "acdbea31-d27e-41a3-bc72-d420a1faf7e0"
                        },
                        new
                        {
                            Id = 34,
                            BoardId = 6,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Contact and setup meeting with assembly factory",
                            IsDeleted = false,
                            Status = 1,
                            Title = "Contact Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 35,
                            BoardId = 6,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Negotiate the price and sign the necessary agreements",
                            IsDeleted = false,
                            Status = 0,
                            Title = "Negotiate price point for manufactoring",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        },
                        new
                        {
                            Id = 36,
                            BoardId = 6,
                            CreatedBy = "User2@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Description = "Find an assembly factory who can produce the screens",
                            IsDeleted = false,
                            Status = 2,
                            Title = "Find Assembly factory",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            Userid = "d881b27e-7b82-4a27-b02a-d277f5e245ca"
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardUser", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BoardId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("BoardUsers");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            ApplicationUserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 2,
                            ApplicationUserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 3,
                            ApplicationUserId = "df50bb3c-693a-4889-8bc6-c7059a20b529",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 2,
                            ApplicationUserId = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 3,
                            ApplicationUserId = "ccd0fb63-3173-4ab2-a80b-731d9939ee70",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 3,
                            ApplicationUserId = "e615c429-b915-4312-871d-74287869debb",
                            CreatedBy = "Admin@Asus.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 4,
                            ApplicationUserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 5,
                            ApplicationUserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 6,
                            ApplicationUserId = "acdbea31-d27e-41a3-bc72-d420a1faf7e0",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 5,
                            ApplicationUserId = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 6,
                            ApplicationUserId = "d881b27e-7b82-4a27-b02a-d277f5e245ca",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BoardId = 6,
                            ApplicationUserId = "ff611b21-e8cf-40c9-931e-2c379163017a",
                            CreatedBy = "Admin@HP.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Asus LTD",
                            PhotoPath = "Asus-logo.jpg",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "SuperAdmin@Scrum.com",
                            CreatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HP LTD",
                            PhotoPath = "hp-logo.jpg",
                            UpdatedDate = new DateTime(2020, 4, 10, 14, 15, 20, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.ApplicationUser", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.Board", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardTask", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Board", "Board")
                        .WithMany("BoardTasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("MielsJimmyScrumProjectDAL.Models.BoardUser", b =>
                {
                    b.HasOne("MielsJimmyScrumProjectDAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("BoardUser")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MielsJimmyScrumProjectDAL.Models.Board", "Board")
                        .WithMany("BoardUsers")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
